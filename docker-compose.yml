version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "8080:8080"   # HTTP API port
      - "50051:50051" # gRPC port
      - "8082:8082"   # WebSocket port
    environment:
      - CONFIG_PATH=/app/config/config.yaml
      - GIN_MODE=release
    volumes:
      - ./apps/api-gateway/config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - stream-router
      - rtmp-ingestor
    networks:
      - streamhive-network

  stream-router:
    build:
      context: .
      dockerfile: apps/stream-router/Dockerfile
    ports:
      - "8081:8081"  # HTTP port
      - "9090:9090"  # gRPC port
    volumes:
      - ./apps/stream-router/config:/src/config
    environment:
      - HTTP_ADDRESS=:8081
      - GRPC_ADDRESS=:9090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - streamhive-network

  rtmp-ingestor:
    build:
      context: .
      dockerfile: apps/rtmp-ingestor/Dockerfile
    ports:
      - "8083:8081"  # HTTP port
      - "1935:1935"  # RTMP port
    volumes:
      - ./apps/rtmp-ingestor/config:/src/config
    environment:
      - HTTP_ADDRESS=:8081
      - RTMP_ADDRESS=:1935
      - ROUTER_ADDRESS=stream-router:9090
      - FRAME_SPLITTER_ADDRESS=frame-splitter:9091
    depends_on:
      - stream-router
      - frame-splitter
    networks:
      - streamhive-network

  frame-splitter:
    build:
      context: .
      dockerfile: apps/frame-splitter/Dockerfile
    ports:
      - "8084:8084"  # HTTP port
      - "9091:9091"  # gRPC port
    volumes:
      - ./apps/frame-splitter/config:/src/config
      - frame-data:/data/frames
    environment:
      - HTTP_ADDRESS=:8084
      - GRPC_ADDRESS=:9091
      - ROUTER_ADDRESS=stream-router:9090
    depends_on:
      - stream-router
    networks:
      - streamhive-network

  # Optional: Enhancement service for AI processing (can be enabled later)
  # enhancement-service:
  #   build:
  #     context: .
  #     dockerfile: apps/enhancement-service/Dockerfile
  #   ports:
  #     - "8087:8087"  # HTTP port
  #     - "9093:9093"  # gRPC port
  #   volumes:
  #     - ./apps/enhancement-service/config:/app/config
  #   environment:
  #     - HTTP_ADDRESS=:8087
  #     - GRPC_ADDRESS=:9093
  #   networks:
  #     - streamhive-network

  webrtc-out:
    build:
      context: .
      dockerfile: apps/webrtc-out/Dockerfile
    ports:
      - "8085:8085"  # HTTP port
      - "9094:9094"  # gRPC port
    volumes:
      - ./apps/webrtc-out/config:/src/config
    environment:
      - HTTP_ADDRESS=:8085
      - GRPC_ADDRESS=:9094
      - SIGNALING_SERVICE=websocket-signaling:9095
      - NODE_ID=webrtc-out-1
      - EXTERNAL_ADDRESS=webrtc-out:9094  # Add this line
    depends_on:
      - websocket-signaling
    networks:
      - streamhive-network

  websocket-signaling:
    build:
      context: .
      dockerfile: apps/websocket-signaling/Dockerfile
    ports:
      - "8086:8086"  # WebSocket port
      - "9095:9095"  # gRPC port
    volumes:
      - ./apps/websocket-signaling/config:/src/config
    environment:
      - HTTP_ADDRESS=:8086
      - GRPC_ADDRESS=:9095
      - NODE_ID=websocket-signaling-1
    networks:
      - streamhive-network

  # # Monitoring stack
  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - streamhive-network

  # grafana:
  #   image: grafana/grafana:latest
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - streamhive-network

networks:
  streamhive-network:
    driver: bridge

volumes:
  frame-data:
  prometheus-data:
  grafana-data:
