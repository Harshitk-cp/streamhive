// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: libs/proto/webrtc/webrtc.proto

package webrtc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FrameType represents the type of media frame
type FrameType int32

const (
	FrameType_UNKNOWN  FrameType = 0
	FrameType_VIDEO    FrameType = 1
	FrameType_AUDIO    FrameType = 2
	FrameType_METADATA FrameType = 3
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "UNKNOWN",
		1: "VIDEO",
		2: "AUDIO",
		3: "METADATA",
	}
	FrameType_value = map[string]int32{
		"UNKNOWN":  0,
		"VIDEO":    1,
		"AUDIO":    2,
		"METADATA": 3,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_proto_webrtc_webrtc_proto_enumTypes[0].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_libs_proto_webrtc_webrtc_proto_enumTypes[0]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{0}
}

// PushFrameRequest is a request to push a frame to a stream
type PushFrameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	FrameId       string                 `protobuf:"bytes,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Type          FrameType              `protobuf:"varint,3,opt,name=type,proto3,enum=webrtc.FrameType" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsKeyFrame    bool                   `protobuf:"varint,6,opt,name=is_key_frame,json=isKeyFrame,proto3" json:"is_key_frame,omitempty"`
	Sequence      int64                  `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushFrameRequest) Reset() {
	*x = PushFrameRequest{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFrameRequest) ProtoMessage() {}

func (x *PushFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFrameRequest.ProtoReflect.Descriptor instead.
func (*PushFrameRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{0}
}

func (x *PushFrameRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *PushFrameRequest) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *PushFrameRequest) GetType() FrameType {
	if x != nil {
		return x.Type
	}
	return FrameType_UNKNOWN
}

func (x *PushFrameRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushFrameRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PushFrameRequest) GetIsKeyFrame() bool {
	if x != nil {
		return x.IsKeyFrame
	}
	return false
}

func (x *PushFrameRequest) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PushFrameRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// PushFrameResponse is a response to a PushFrame request
type PushFrameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushFrameResponse) Reset() {
	*x = PushFrameResponse{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFrameResponse) ProtoMessage() {}

func (x *PushFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFrameResponse.ProtoReflect.Descriptor instead.
func (*PushFrameResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{1}
}

func (x *PushFrameResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// OfferRequest contains an SDP offer from a viewer
type OfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ViewerId      string                 `protobuf:"bytes,2,opt,name=viewer_id,json=viewerId,proto3" json:"viewer_id,omitempty"`
	Offer         string                 `protobuf:"bytes,3,opt,name=offer,proto3" json:"offer,omitempty"` // SDP offer
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferRequest) Reset() {
	*x = OfferRequest{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRequest) ProtoMessage() {}

func (x *OfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRequest.ProtoReflect.Descriptor instead.
func (*OfferRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{2}
}

func (x *OfferRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *OfferRequest) GetViewerId() string {
	if x != nil {
		return x.ViewerId
	}
	return ""
}

func (x *OfferRequest) GetOffer() string {
	if x != nil {
		return x.Offer
	}
	return ""
}

// AnswerResponse contains an SDP answer for a viewer
type AnswerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ViewerId      string                 `protobuf:"bytes,2,opt,name=viewer_id,json=viewerId,proto3" json:"viewer_id,omitempty"`
	Answer        string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"` // SDP answer
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerResponse) Reset() {
	*x = AnswerResponse{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerResponse) ProtoMessage() {}

func (x *AnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerResponse.ProtoReflect.Descriptor instead.
func (*AnswerResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{3}
}

func (x *AnswerResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *AnswerResponse) GetViewerId() string {
	if x != nil {
		return x.ViewerId
	}
	return ""
}

func (x *AnswerResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

// ICECandidateRequest contains an ICE candidate from a viewer
type ICECandidateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ViewerId      string                 `protobuf:"bytes,2,opt,name=viewer_id,json=viewerId,proto3" json:"viewer_id,omitempty"`
	Candidate     string                 `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMid        string                 `protobuf:"bytes,4,opt,name=sdp_mid,json=sdpMid,proto3" json:"sdp_mid,omitempty"`
	SdpMlineIndex uint32                 `protobuf:"varint,5,opt,name=sdp_mline_index,json=sdpMlineIndex,proto3" json:"sdp_mline_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ICECandidateRequest) Reset() {
	*x = ICECandidateRequest{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ICECandidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICECandidateRequest) ProtoMessage() {}

func (x *ICECandidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICECandidateRequest.ProtoReflect.Descriptor instead.
func (*ICECandidateRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{4}
}

func (x *ICECandidateRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ICECandidateRequest) GetViewerId() string {
	if x != nil {
		return x.ViewerId
	}
	return ""
}

func (x *ICECandidateRequest) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *ICECandidateRequest) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *ICECandidateRequest) GetSdpMlineIndex() uint32 {
	if x != nil {
		return x.SdpMlineIndex
	}
	return 0
}

// GetStreamInfoRequest is a request to get information about a stream
type GetStreamInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamInfoRequest) Reset() {
	*x = GetStreamInfoRequest{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamInfoRequest) ProtoMessage() {}

func (x *GetStreamInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStreamInfoRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{5}
}

func (x *GetStreamInfoRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

// StreamInfo contains information about a WebRTC stream
type StreamInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StreamId       string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CurrentViewers int32                  `protobuf:"varint,3,opt,name=current_viewers,json=currentViewers,proto3" json:"current_viewers,omitempty"`
	TotalViewers   int32                  `protobuf:"varint,4,opt,name=total_viewers,json=totalViewers,proto3" json:"total_viewers,omitempty"`
	Width          int32                  `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height         int32                  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	FrameRate      float32                `protobuf:"fixed32,7,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	TotalFrames    int64                  `protobuf:"varint,8,opt,name=total_frames,json=totalFrames,proto3" json:"total_frames,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{6}
}

func (x *StreamInfo) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StreamInfo) GetCurrentViewers() int32 {
	if x != nil {
		return x.CurrentViewers
	}
	return 0
}

func (x *StreamInfo) GetTotalViewers() int32 {
	if x != nil {
		return x.TotalViewers
	}
	return 0
}

func (x *StreamInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *StreamInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *StreamInfo) GetFrameRate() float32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *StreamInfo) GetTotalFrames() int64 {
	if x != nil {
		return x.TotalFrames
	}
	return 0
}

// RemoveStreamRequest is a request to remove a stream
type RemoveStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveStreamRequest) Reset() {
	*x = RemoveStreamRequest{}
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamRequest) ProtoMessage() {}

func (x *RemoveStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_webrtc_webrtc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamRequest.ProtoReflect.Descriptor instead.
func (*RemoveStreamRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_webrtc_webrtc_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveStreamRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

var File_libs_proto_webrtc_webrtc_proto protoreflect.FileDescriptor

const file_libs_proto_webrtc_webrtc_proto_rawDesc = "" +
	"\n" +
	"\x1elibs/proto/webrtc/webrtc.proto\x12\x06webrtc\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xfe\x02\n" +
	"\x10PushFrameRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x19\n" +
	"\bframe_id\x18\x02 \x01(\tR\aframeId\x12%\n" +
	"\x04type\x18\x03 \x01(\x0e2\x11.webrtc.FrameTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\fis_key_frame\x18\x06 \x01(\bR\n" +
	"isKeyFrame\x12\x1a\n" +
	"\bsequence\x18\a \x01(\x03R\bsequence\x12B\n" +
	"\bmetadata\x18\b \x03(\v2&.webrtc.PushFrameRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"+\n" +
	"\x11PushFrameResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"^\n" +
	"\fOfferRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1b\n" +
	"\tviewer_id\x18\x02 \x01(\tR\bviewerId\x12\x14\n" +
	"\x05offer\x18\x03 \x01(\tR\x05offer\"b\n" +
	"\x0eAnswerResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1b\n" +
	"\tviewer_id\x18\x02 \x01(\tR\bviewerId\x12\x16\n" +
	"\x06answer\x18\x03 \x01(\tR\x06answer\"\xae\x01\n" +
	"\x13ICECandidateRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1b\n" +
	"\tviewer_id\x18\x02 \x01(\tR\bviewerId\x12\x1c\n" +
	"\tcandidate\x18\x03 \x01(\tR\tcandidate\x12\x17\n" +
	"\asdp_mid\x18\x04 \x01(\tR\x06sdpMid\x12&\n" +
	"\x0fsdp_mline_index\x18\x05 \x01(\rR\rsdpMlineIndex\"3\n" +
	"\x14GetStreamInfoRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"\xff\x01\n" +
	"\n" +
	"StreamInfo\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12'\n" +
	"\x0fcurrent_viewers\x18\x03 \x01(\x05R\x0ecurrentViewers\x12#\n" +
	"\rtotal_viewers\x18\x04 \x01(\x05R\ftotalViewers\x12\x14\n" +
	"\x05width\x18\x05 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x06 \x01(\x05R\x06height\x12\x1d\n" +
	"\n" +
	"frame_rate\x18\a \x01(\x02R\tframeRate\x12!\n" +
	"\ftotal_frames\x18\b \x01(\x03R\vtotalFrames\"2\n" +
	"\x13RemoveStreamRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId*<\n" +
	"\tFrameType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05VIDEO\x10\x01\x12\t\n" +
	"\x05AUDIO\x10\x02\x12\f\n" +
	"\bMETADATA\x10\x032\xe1\x02\n" +
	"\rWebRTCService\x12;\n" +
	"\vHandleOffer\x12\x14.webrtc.OfferRequest\x1a\x16.webrtc.AnswerResponse\x12I\n" +
	"\x12HandleICECandidate\x12\x1b.webrtc.ICECandidateRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\rGetStreamInfo\x12\x1c.webrtc.GetStreamInfoRequest\x1a\x12.webrtc.StreamInfo\x12C\n" +
	"\fRemoveStream\x12\x1b.webrtc.RemoveStreamRequest\x1a\x16.google.protobuf.Empty\x12@\n" +
	"\tPushFrame\x12\x18.webrtc.PushFrameRequest\x1a\x19.webrtc.PushFrameResponseB\x13Z\x11libs/proto/webrtcb\x06proto3"

var (
	file_libs_proto_webrtc_webrtc_proto_rawDescOnce sync.Once
	file_libs_proto_webrtc_webrtc_proto_rawDescData []byte
)

func file_libs_proto_webrtc_webrtc_proto_rawDescGZIP() []byte {
	file_libs_proto_webrtc_webrtc_proto_rawDescOnce.Do(func() {
		file_libs_proto_webrtc_webrtc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_libs_proto_webrtc_webrtc_proto_rawDesc), len(file_libs_proto_webrtc_webrtc_proto_rawDesc)))
	})
	return file_libs_proto_webrtc_webrtc_proto_rawDescData
}

var file_libs_proto_webrtc_webrtc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_libs_proto_webrtc_webrtc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_libs_proto_webrtc_webrtc_proto_goTypes = []any{
	(FrameType)(0),                // 0: webrtc.FrameType
	(*PushFrameRequest)(nil),      // 1: webrtc.PushFrameRequest
	(*PushFrameResponse)(nil),     // 2: webrtc.PushFrameResponse
	(*OfferRequest)(nil),          // 3: webrtc.OfferRequest
	(*AnswerResponse)(nil),        // 4: webrtc.AnswerResponse
	(*ICECandidateRequest)(nil),   // 5: webrtc.ICECandidateRequest
	(*GetStreamInfoRequest)(nil),  // 6: webrtc.GetStreamInfoRequest
	(*StreamInfo)(nil),            // 7: webrtc.StreamInfo
	(*RemoveStreamRequest)(nil),   // 8: webrtc.RemoveStreamRequest
	nil,                           // 9: webrtc.PushFrameRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_libs_proto_webrtc_webrtc_proto_depIdxs = []int32{
	0,  // 0: webrtc.PushFrameRequest.type:type_name -> webrtc.FrameType
	10, // 1: webrtc.PushFrameRequest.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 2: webrtc.PushFrameRequest.metadata:type_name -> webrtc.PushFrameRequest.MetadataEntry
	3,  // 3: webrtc.WebRTCService.HandleOffer:input_type -> webrtc.OfferRequest
	5,  // 4: webrtc.WebRTCService.HandleICECandidate:input_type -> webrtc.ICECandidateRequest
	6,  // 5: webrtc.WebRTCService.GetStreamInfo:input_type -> webrtc.GetStreamInfoRequest
	8,  // 6: webrtc.WebRTCService.RemoveStream:input_type -> webrtc.RemoveStreamRequest
	1,  // 7: webrtc.WebRTCService.PushFrame:input_type -> webrtc.PushFrameRequest
	4,  // 8: webrtc.WebRTCService.HandleOffer:output_type -> webrtc.AnswerResponse
	11, // 9: webrtc.WebRTCService.HandleICECandidate:output_type -> google.protobuf.Empty
	7,  // 10: webrtc.WebRTCService.GetStreamInfo:output_type -> webrtc.StreamInfo
	11, // 11: webrtc.WebRTCService.RemoveStream:output_type -> google.protobuf.Empty
	2,  // 12: webrtc.WebRTCService.PushFrame:output_type -> webrtc.PushFrameResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_libs_proto_webrtc_webrtc_proto_init() }
func file_libs_proto_webrtc_webrtc_proto_init() {
	if File_libs_proto_webrtc_webrtc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_libs_proto_webrtc_webrtc_proto_rawDesc), len(file_libs_proto_webrtc_webrtc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_libs_proto_webrtc_webrtc_proto_goTypes,
		DependencyIndexes: file_libs_proto_webrtc_webrtc_proto_depIdxs,
		EnumInfos:         file_libs_proto_webrtc_webrtc_proto_enumTypes,
		MessageInfos:      file_libs_proto_webrtc_webrtc_proto_msgTypes,
	}.Build()
	File_libs_proto_webrtc_webrtc_proto = out.File
	file_libs_proto_webrtc_webrtc_proto_goTypes = nil
	file_libs_proto_webrtc_webrtc_proto_depIdxs = nil
}
