syntax = "proto3";

package enhancement;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "libs/proto/enhancement";

// Frame type enumeration
enum FrameType {
  UNKNOWN = 0;
  VIDEO = 1;
  AUDIO = 2;
  METADATA = 3;
}

// Frame represents a video or audio frame
message Frame {
  string stream_id = 1;
  string frame_id = 2;
  google.protobuf.Timestamp timestamp = 3;
  FrameType type = 4;
  bytes data = 5;
  map<string, string> metadata = 6;
  int64 sequence = 7;
  bool is_key_frame = 8;
  int32 duration = 9; // Duration in milliseconds
}

// EnhanceFramesRequest is used to enhance a batch of frames
message EnhanceFramesRequest {
  string stream_id = 1;
  repeated Frame frames = 2;
}

// EnhanceFramesResponse contains the result of enhancing frames
message EnhanceFramesResponse {
  string status = 1;
  string error = 2;
}

// EnhancementConfig represents the configuration for enhancements
message EnhancementConfig {
  string stream_id = 1;
  bool noise_reduction = 2;
  bool auto_brightness = 3;
  bool auto_contrast = 4;
  bool object_detection = 5;
  bool face_detection = 6;
  bool scene_detection = 7;
  map<string, string> additional_params = 8;
}

// GetEnhancementConfigRequest is used to get the enhancement configuration for a stream
message GetEnhancementConfigRequest {
  string stream_id = 1;
}

// EnhancementService handles frame enhancement
service EnhancementService {
  // Enhance a batch of frames
  rpc EnhanceFrames(EnhanceFramesRequest) returns (EnhanceFramesResponse);

  // Get the enhancement configuration for a stream
  rpc GetEnhancementConfig(GetEnhancementConfigRequest) returns (EnhancementConfig);

  // Update the enhancement configuration for a stream
  rpc UpdateEnhancementConfig(EnhancementConfig) returns (google.protobuf.Empty);
}
