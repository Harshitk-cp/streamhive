syntax = "proto3";

package signaling;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "libs/proto/signaling";

// SignalingService provides WebRTC signaling functionality
service SignalingService {
  // CreateOffer creates a WebRTC offer
  rpc CreateOffer(CreateOfferRequest) returns (CreateOfferResponse);
  
  // CreateAnswer creates a WebRTC answer
  rpc CreateAnswer(CreateAnswerRequest) returns (CreateAnswerResponse);
  
  // AddICECandidate adds an ICE candidate
  rpc AddICECandidate(AddICECandidateRequest) returns (AddICECandidateResponse);

  // SendSignalingMessage sends a signaling message
  rpc SendSignalingMessage(SignalingMessage) returns (google.protobuf.Empty);

  // GetStreamInfo gets information about a stream
  rpc GetStreamInfo(GetStreamInfoRequest) returns (StreamInfo);

  // NotifyStreamEnded notifies clients that a stream has ended
  rpc NotifyStreamEnded(NotifyStreamEndedRequest) returns (google.protobuf.Empty);

  // GetStats gets statistics about the signaling service
  rpc GetStats(google.protobuf.Empty) returns (SignalingStats);

  // StreamSignaling establishes a bidirectional signaling stream
  rpc StreamSignaling(stream SignalingMessage) returns (stream SignalingMessage);
}

// SignalingMessage represents a WebRTC signaling message
message SignalingMessage {
  string type = 1;
  string stream_id = 2;
  string sender_id = 3;
  string recipient_id = 4;
  string payload = 5;
  int64 timestamp = 6;
}

// GetStreamInfoRequest is a request to get information about a stream
message GetStreamInfoRequest {
  string stream_id = 1;
}

// StreamInfo contains information about a stream
message StreamInfo {
  string stream_id = 1;
  int32 client_count = 2;
  bool active = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// NotifyStreamEndedRequest is a request to notify clients that a stream has ended
message NotifyStreamEndedRequest {
  string stream_id = 1;
  string reason = 2;
}

// SignalingStats contains statistics about the signaling service
message SignalingStats {
  int32 connected_clients = 1;
  google.protobuf.Timestamp timestamp = 2;
}

// SessionDescription represents an SDP session description
message SessionDescription {
  string type = 1;
  string sdp = 2;
}

// ICECandidate represents an ICE candidate
message ICECandidate {
  string candidate = 1;
  string sdp_mid = 2;
  int32 sdp_mline_index = 3;
}

// CreateOfferRequest is the request for creating an offer
message CreateOfferRequest {
  string stream_id = 1;
  string client_id = 2;
}

// CreateOfferResponse is the response for creating an offer
message CreateOfferResponse {
  SessionDescription offer = 1;
}

// CreateAnswerRequest is the request for creating an answer
message CreateAnswerRequest {
  string stream_id = 1;
  string client_id = 2;
  SessionDescription offer = 3;
}

// CreateAnswerResponse is the response for creating an answer
message CreateAnswerResponse {
  SessionDescription answer = 1;
}

// AddICECandidateRequest is the request for adding an ICE candidate
message AddICECandidateRequest {
  string stream_id = 1;
  string client_id = 2;
  ICECandidate candidate = 3;
}

// AddICECandidateResponse is the response for adding an ICE candidate
message AddICECandidateResponse {
  bool success = 1;
}
