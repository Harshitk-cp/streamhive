// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: libs/proto/encoder/encoder.proto

package encoder

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Frame type enumeration
type FrameType int32

const (
	FrameType_UNKNOWN  FrameType = 0
	FrameType_VIDEO    FrameType = 1
	FrameType_AUDIO    FrameType = 2
	FrameType_METADATA FrameType = 3
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "UNKNOWN",
		1: "VIDEO",
		2: "AUDIO",
		3: "METADATA",
	}
	FrameType_value = map[string]int32{
		"UNKNOWN":  0,
		"VIDEO":    1,
		"AUDIO":    2,
		"METADATA": 3,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_proto_encoder_encoder_proto_enumTypes[0].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_libs_proto_encoder_encoder_proto_enumTypes[0]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{0}
}

// Frame represents a video or audio frame
type Frame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	FrameId       string                 `protobuf:"bytes,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type          FrameType              `protobuf:"varint,4,opt,name=type,proto3,enum=encoder.FrameType" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sequence      int64                  `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	IsKeyFrame    bool                   `protobuf:"varint,8,opt,name=is_key_frame,json=isKeyFrame,proto3" json:"is_key_frame,omitempty"`
	Duration      int32                  `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"` // Duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Frame) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *Frame) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Frame) GetType() FrameType {
	if x != nil {
		return x.Type
	}
	return FrameType_UNKNOWN
}

func (x *Frame) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Frame) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Frame) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Frame) GetIsKeyFrame() bool {
	if x != nil {
		return x.IsKeyFrame
	}
	return false
}

func (x *Frame) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// EncodeFramesRequest is used to encode a batch of frames
type EncodeFramesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Frames        []*Frame               `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeFramesRequest) Reset() {
	*x = EncodeFramesRequest{}
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeFramesRequest) ProtoMessage() {}

func (x *EncodeFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeFramesRequest.ProtoReflect.Descriptor instead.
func (*EncodeFramesRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{1}
}

func (x *EncodeFramesRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *EncodeFramesRequest) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// EncodeFramesResponse contains the result of encoding frames
type EncodeFramesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeFramesResponse) Reset() {
	*x = EncodeFramesResponse{}
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeFramesResponse) ProtoMessage() {}

func (x *EncodeFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeFramesResponse.ProtoReflect.Descriptor instead.
func (*EncodeFramesResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{2}
}

func (x *EncodeFramesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EncodeFramesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// EncoderServiceConfig represents the configuration for the encoder service
type EncoderServiceConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	StreamId         string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	VideoCodec       string                 `protobuf:"bytes,2,opt,name=video_codec,json=videoCodec,proto3" json:"video_codec,omitempty"`
	AudioCodec       string                 `protobuf:"bytes,3,opt,name=audio_codec,json=audioCodec,proto3" json:"audio_codec,omitempty"`
	VideoBitrate     int32                  `protobuf:"varint,4,opt,name=video_bitrate,json=videoBitrate,proto3" json:"video_bitrate,omitempty"`
	AudioBitrate     int32                  `protobuf:"varint,5,opt,name=audio_bitrate,json=audioBitrate,proto3" json:"audio_bitrate,omitempty"`
	Resolution       string                 `protobuf:"bytes,6,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Framerate        float64                `protobuf:"fixed64,7,opt,name=framerate,proto3" json:"framerate,omitempty"`
	AdditionalParams map[string]string      `protobuf:"bytes,8,rep,name=additional_params,json=additionalParams,proto3" json:"additional_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EncoderServiceConfig) Reset() {
	*x = EncoderServiceConfig{}
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncoderServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncoderServiceConfig) ProtoMessage() {}

func (x *EncoderServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncoderServiceConfig.ProtoReflect.Descriptor instead.
func (*EncoderServiceConfig) Descriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{3}
}

func (x *EncoderServiceConfig) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *EncoderServiceConfig) GetVideoCodec() string {
	if x != nil {
		return x.VideoCodec
	}
	return ""
}

func (x *EncoderServiceConfig) GetAudioCodec() string {
	if x != nil {
		return x.AudioCodec
	}
	return ""
}

func (x *EncoderServiceConfig) GetVideoBitrate() int32 {
	if x != nil {
		return x.VideoBitrate
	}
	return 0
}

func (x *EncoderServiceConfig) GetAudioBitrate() int32 {
	if x != nil {
		return x.AudioBitrate
	}
	return 0
}

func (x *EncoderServiceConfig) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *EncoderServiceConfig) GetFramerate() float64 {
	if x != nil {
		return x.Framerate
	}
	return 0
}

func (x *EncoderServiceConfig) GetAdditionalParams() map[string]string {
	if x != nil {
		return x.AdditionalParams
	}
	return nil
}

// GetEncoderConfigRequest is used to get the configuration for a stream
type GetEncoderConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEncoderConfigRequest) Reset() {
	*x = GetEncoderConfigRequest{}
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEncoderConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEncoderConfigRequest) ProtoMessage() {}

func (x *GetEncoderConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_encoder_encoder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEncoderConfigRequest.ProtoReflect.Descriptor instead.
func (*GetEncoderConfigRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_encoder_encoder_proto_rawDescGZIP(), []int{4}
}

func (x *GetEncoderConfigRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

var File_libs_proto_encoder_encoder_proto protoreflect.FileDescriptor

const file_libs_proto_encoder_encoder_proto_rawDesc = "" +
	"\n" +
	" libs/proto/encoder/encoder.proto\x12\aencoder\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x86\x03\n" +
	"\x05Frame\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x19\n" +
	"\bframe_id\x18\x02 \x01(\tR\aframeId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12&\n" +
	"\x04type\x18\x04 \x01(\x0e2\x12.encoder.FrameTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x128\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1c.encoder.Frame.MetadataEntryR\bmetadata\x12\x1a\n" +
	"\bsequence\x18\a \x01(\x03R\bsequence\x12 \n" +
	"\fis_key_frame\x18\b \x01(\bR\n" +
	"isKeyFrame\x12\x1a\n" +
	"\bduration\x18\t \x01(\x05R\bduration\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x13EncodeFramesRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12&\n" +
	"\x06frames\x18\x02 \x03(\v2\x0e.encoder.FrameR\x06frames\"D\n" +
	"\x14EncodeFramesResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xa4\x03\n" +
	"\x14EncoderServiceConfig\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1f\n" +
	"\vvideo_codec\x18\x02 \x01(\tR\n" +
	"videoCodec\x12\x1f\n" +
	"\vaudio_codec\x18\x03 \x01(\tR\n" +
	"audioCodec\x12#\n" +
	"\rvideo_bitrate\x18\x04 \x01(\x05R\fvideoBitrate\x12#\n" +
	"\raudio_bitrate\x18\x05 \x01(\x05R\faudioBitrate\x12\x1e\n" +
	"\n" +
	"resolution\x18\x06 \x01(\tR\n" +
	"resolution\x12\x1c\n" +
	"\tframerate\x18\a \x01(\x01R\tframerate\x12`\n" +
	"\x11additional_params\x18\b \x03(\v23.encoder.EncoderServiceConfig.AdditionalParamsEntryR\x10additionalParams\x1aC\n" +
	"\x15AdditionalParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x17GetEncoderConfigRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId*<\n" +
	"\tFrameType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05VIDEO\x10\x01\x12\t\n" +
	"\x05AUDIO\x10\x02\x12\f\n" +
	"\bMETADATA\x10\x032\x80\x02\n" +
	"\x0eEncoderService\x12K\n" +
	"\fEncodeFrames\x12\x1c.encoder.EncodeFramesRequest\x1a\x1d.encoder.EncodeFramesResponse\x12S\n" +
	"\x10GetEncoderConfig\x12 .encoder.GetEncoderConfigRequest\x1a\x1d.encoder.EncoderServiceConfig\x12L\n" +
	"\x13UpdateEncoderConfig\x12\x1d.encoder.EncoderServiceConfig\x1a\x16.google.protobuf.EmptyB\x14Z\x12libs/proto/encoderb\x06proto3"

var (
	file_libs_proto_encoder_encoder_proto_rawDescOnce sync.Once
	file_libs_proto_encoder_encoder_proto_rawDescData []byte
)

func file_libs_proto_encoder_encoder_proto_rawDescGZIP() []byte {
	file_libs_proto_encoder_encoder_proto_rawDescOnce.Do(func() {
		file_libs_proto_encoder_encoder_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_libs_proto_encoder_encoder_proto_rawDesc), len(file_libs_proto_encoder_encoder_proto_rawDesc)))
	})
	return file_libs_proto_encoder_encoder_proto_rawDescData
}

var file_libs_proto_encoder_encoder_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_libs_proto_encoder_encoder_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_libs_proto_encoder_encoder_proto_goTypes = []any{
	(FrameType)(0),                  // 0: encoder.FrameType
	(*Frame)(nil),                   // 1: encoder.Frame
	(*EncodeFramesRequest)(nil),     // 2: encoder.EncodeFramesRequest
	(*EncodeFramesResponse)(nil),    // 3: encoder.EncodeFramesResponse
	(*EncoderServiceConfig)(nil),    // 4: encoder.EncoderServiceConfig
	(*GetEncoderConfigRequest)(nil), // 5: encoder.GetEncoderConfigRequest
	nil,                             // 6: encoder.Frame.MetadataEntry
	nil,                             // 7: encoder.EncoderServiceConfig.AdditionalParamsEntry
	(*timestamppb.Timestamp)(nil),   // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 9: google.protobuf.Empty
}
var file_libs_proto_encoder_encoder_proto_depIdxs = []int32{
	8, // 0: encoder.Frame.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: encoder.Frame.type:type_name -> encoder.FrameType
	6, // 2: encoder.Frame.metadata:type_name -> encoder.Frame.MetadataEntry
	1, // 3: encoder.EncodeFramesRequest.frames:type_name -> encoder.Frame
	7, // 4: encoder.EncoderServiceConfig.additional_params:type_name -> encoder.EncoderServiceConfig.AdditionalParamsEntry
	2, // 5: encoder.EncoderService.EncodeFrames:input_type -> encoder.EncodeFramesRequest
	5, // 6: encoder.EncoderService.GetEncoderConfig:input_type -> encoder.GetEncoderConfigRequest
	4, // 7: encoder.EncoderService.UpdateEncoderConfig:input_type -> encoder.EncoderServiceConfig
	3, // 8: encoder.EncoderService.EncodeFrames:output_type -> encoder.EncodeFramesResponse
	4, // 9: encoder.EncoderService.GetEncoderConfig:output_type -> encoder.EncoderServiceConfig
	9, // 10: encoder.EncoderService.UpdateEncoderConfig:output_type -> google.protobuf.Empty
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_libs_proto_encoder_encoder_proto_init() }
func file_libs_proto_encoder_encoder_proto_init() {
	if File_libs_proto_encoder_encoder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_libs_proto_encoder_encoder_proto_rawDesc), len(file_libs_proto_encoder_encoder_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_libs_proto_encoder_encoder_proto_goTypes,
		DependencyIndexes: file_libs_proto_encoder_encoder_proto_depIdxs,
		EnumInfos:         file_libs_proto_encoder_encoder_proto_enumTypes,
		MessageInfos:      file_libs_proto_encoder_encoder_proto_msgTypes,
	}.Build()
	File_libs_proto_encoder_encoder_proto = out.File
	file_libs_proto_encoder_encoder_proto_goTypes = nil
	file_libs_proto_encoder_encoder_proto_depIdxs = nil
}
