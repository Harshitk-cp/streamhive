// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: libs/proto/frame/frame.proto

package frame

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Frame type enumeration
type FrameType int32

const (
	FrameType_UNKNOWN  FrameType = 0
	FrameType_VIDEO    FrameType = 1
	FrameType_AUDIO    FrameType = 2
	FrameType_METADATA FrameType = 3
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "UNKNOWN",
		1: "VIDEO",
		2: "AUDIO",
		3: "METADATA",
	}
	FrameType_value = map[string]int32{
		"UNKNOWN":  0,
		"VIDEO":    1,
		"AUDIO":    2,
		"METADATA": 3,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_proto_frame_frame_proto_enumTypes[0].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_libs_proto_frame_frame_proto_enumTypes[0]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{0}
}

// Frame represents a video or audio frame
type Frame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	FrameId       string                 `protobuf:"bytes,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type          FrameType              `protobuf:"varint,4,opt,name=type,proto3,enum=frame.FrameType" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sequence      int64                  `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	IsKeyFrame    bool                   `protobuf:"varint,8,opt,name=is_key_frame,json=isKeyFrame,proto3" json:"is_key_frame,omitempty"`
	Duration      int32                  `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"` // Duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Frame) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *Frame) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Frame) GetType() FrameType {
	if x != nil {
		return x.Type
	}
	return FrameType_UNKNOWN
}

func (x *Frame) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Frame) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Frame) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Frame) GetIsKeyFrame() bool {
	if x != nil {
		return x.IsKeyFrame
	}
	return false
}

func (x *Frame) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// ProcessFrameRequest is used to process a single frame
type ProcessFrameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frame         *Frame                 `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFrameRequest) Reset() {
	*x = ProcessFrameRequest{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFrameRequest) ProtoMessage() {}

func (x *ProcessFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFrameRequest.ProtoReflect.Descriptor instead.
func (*ProcessFrameRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessFrameRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

// ProcessFrameResponse contains the result of processing a frame
type ProcessFrameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       string                 `protobuf:"bytes,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Destinations  []string               `protobuf:"bytes,4,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFrameResponse) Reset() {
	*x = ProcessFrameResponse{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFrameResponse) ProtoMessage() {}

func (x *ProcessFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFrameResponse.ProtoReflect.Descriptor instead.
func (*ProcessFrameResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessFrameResponse) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *ProcessFrameResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessFrameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ProcessFrameResponse) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *ProcessFrameResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ProcessFrameBatchRequest is used to process a batch of frames
type ProcessFrameBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Frames        []*Frame               `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFrameBatchRequest) Reset() {
	*x = ProcessFrameBatchRequest{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFrameBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFrameBatchRequest) ProtoMessage() {}

func (x *ProcessFrameBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFrameBatchRequest.ProtoReflect.Descriptor instead.
func (*ProcessFrameBatchRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessFrameBatchRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ProcessFrameBatchRequest) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// ProcessFrameBatchResponse contains the results of processing a batch of frames
type ProcessFrameBatchResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Results       []*ProcessFrameResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFrameBatchResponse) Reset() {
	*x = ProcessFrameBatchResponse{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFrameBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFrameBatchResponse) ProtoMessage() {}

func (x *ProcessFrameBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFrameBatchResponse.ProtoReflect.Descriptor instead.
func (*ProcessFrameBatchResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessFrameBatchResponse) GetResults() []*ProcessFrameResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

// RoutingRule represents a routing rule for frames
type RoutingRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Destination   string                 `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Filter        string                 `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Priority      int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	BatchSize     int32                  `protobuf:"varint,5,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoutingRule) Reset() {
	*x = RoutingRule{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingRule) ProtoMessage() {}

func (x *RoutingRule) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingRule.ProtoReflect.Descriptor instead.
func (*RoutingRule) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{5}
}

func (x *RoutingRule) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *RoutingRule) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *RoutingRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RoutingRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RoutingRule) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

// StreamConfig represents the configuration for a stream
type StreamConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	RoutingRules  []*RoutingRule         `protobuf:"bytes,2,rep,name=routing_rules,json=routingRules,proto3" json:"routing_rules,omitempty"`
	BackupEnabled bool                   `protobuf:"varint,3,opt,name=backup_enabled,json=backupEnabled,proto3" json:"backup_enabled,omitempty"`
	StoragePath   string                 `protobuf:"bytes,4,opt,name=storage_path,json=storagePath,proto3" json:"storage_path,omitempty"`
	RetentionTime int64                  `protobuf:"varint,5,opt,name=retention_time,json=retentionTime,proto3" json:"retention_time,omitempty"` // In seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamConfig) Reset() {
	*x = StreamConfig{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamConfig) ProtoMessage() {}

func (x *StreamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamConfig.ProtoReflect.Descriptor instead.
func (*StreamConfig) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{6}
}

func (x *StreamConfig) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamConfig) GetRoutingRules() []*RoutingRule {
	if x != nil {
		return x.RoutingRules
	}
	return nil
}

func (x *StreamConfig) GetBackupEnabled() bool {
	if x != nil {
		return x.BackupEnabled
	}
	return false
}

func (x *StreamConfig) GetStoragePath() string {
	if x != nil {
		return x.StoragePath
	}
	return ""
}

func (x *StreamConfig) GetRetentionTime() int64 {
	if x != nil {
		return x.RetentionTime
	}
	return 0
}

// GetStreamConfigRequest is used to get the configuration for a stream
type GetStreamConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamConfigRequest) Reset() {
	*x = GetStreamConfigRequest{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamConfigRequest) ProtoMessage() {}

func (x *GetStreamConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamConfigRequest.ProtoReflect.Descriptor instead.
func (*GetStreamConfigRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{7}
}

func (x *GetStreamConfigRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

// UpdateStreamConfigResponse contains the response to updating a stream configuration
type UpdateStreamConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStreamConfigResponse) Reset() {
	*x = UpdateStreamConfigResponse{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStreamConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamConfigResponse) ProtoMessage() {}

func (x *UpdateStreamConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateStreamConfigResponse) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateStreamConfigResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// GetStreamStatsRequest is used to get statistics for a stream
type GetStreamStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamStatsRequest) Reset() {
	*x = GetStreamStatsRequest{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamStatsRequest) ProtoMessage() {}

func (x *GetStreamStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStreamStatsRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{9}
}

func (x *GetStreamStatsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

// StreamStats represents statistics for a stream
type StreamStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StreamId          string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	FramesProcessed   int64                  `protobuf:"varint,2,opt,name=frames_processed,json=framesProcessed,proto3" json:"frames_processed,omitempty"`
	BytesProcessed    int64                  `protobuf:"varint,3,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
	FramesDropped     int64                  `protobuf:"varint,4,opt,name=frames_dropped,json=framesDropped,proto3" json:"frames_dropped,omitempty"`
	AvgProcessingTime float64                `protobuf:"fixed64,5,opt,name=avg_processing_time,json=avgProcessingTime,proto3" json:"avg_processing_time,omitempty"` // In milliseconds
	LastProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_processed_at,json=lastProcessedAt,proto3" json:"last_processed_at,omitempty"`
	LastKeyFrameAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_key_frame_at,json=lastKeyFrameAt,proto3" json:"last_key_frame_at,omitempty"`
	VideoFrameRate    float64                `protobuf:"fixed64,8,opt,name=video_frame_rate,json=videoFrameRate,proto3" json:"video_frame_rate,omitempty"`
	AudioFrameRate    float64                `protobuf:"fixed64,9,opt,name=audio_frame_rate,json=audioFrameRate,proto3" json:"audio_frame_rate,omitempty"`
	VideoBitrate      int64                  `protobuf:"varint,10,opt,name=video_bitrate,json=videoBitrate,proto3" json:"video_bitrate,omitempty"`
	AudioBitrate      int64                  `protobuf:"varint,11,opt,name=audio_bitrate,json=audioBitrate,proto3" json:"audio_bitrate,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StreamStats) Reset() {
	*x = StreamStats{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStats) ProtoMessage() {}

func (x *StreamStats) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStats.ProtoReflect.Descriptor instead.
func (*StreamStats) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{10}
}

func (x *StreamStats) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamStats) GetFramesProcessed() int64 {
	if x != nil {
		return x.FramesProcessed
	}
	return 0
}

func (x *StreamStats) GetBytesProcessed() int64 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

func (x *StreamStats) GetFramesDropped() int64 {
	if x != nil {
		return x.FramesDropped
	}
	return 0
}

func (x *StreamStats) GetAvgProcessingTime() float64 {
	if x != nil {
		return x.AvgProcessingTime
	}
	return 0
}

func (x *StreamStats) GetLastProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessedAt
	}
	return nil
}

func (x *StreamStats) GetLastKeyFrameAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastKeyFrameAt
	}
	return nil
}

func (x *StreamStats) GetVideoFrameRate() float64 {
	if x != nil {
		return x.VideoFrameRate
	}
	return 0
}

func (x *StreamStats) GetAudioFrameRate() float64 {
	if x != nil {
		return x.AudioFrameRate
	}
	return 0
}

func (x *StreamStats) GetVideoBitrate() int64 {
	if x != nil {
		return x.VideoBitrate
	}
	return 0
}

func (x *StreamStats) GetAudioBitrate() int64 {
	if x != nil {
		return x.AudioBitrate
	}
	return 0
}

// Add the request message:
type RestoreFrameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	FrameId       string                 `protobuf:"bytes,2,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreFrameRequest) Reset() {
	*x = RestoreFrameRequest{}
	mi := &file_libs_proto_frame_frame_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreFrameRequest) ProtoMessage() {}

func (x *RestoreFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_proto_frame_frame_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreFrameRequest.ProtoReflect.Descriptor instead.
func (*RestoreFrameRequest) Descriptor() ([]byte, []int) {
	return file_libs_proto_frame_frame_proto_rawDescGZIP(), []int{11}
}

func (x *RestoreFrameRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *RestoreFrameRequest) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

var File_libs_proto_frame_frame_proto protoreflect.FileDescriptor

const file_libs_proto_frame_frame_proto_rawDesc = "" +
	"\n" +
	"\x1clibs/proto/frame/frame.proto\x12\x05frame\x1a\x1fgoogle/protobuf/timestamp.proto\"\x82\x03\n" +
	"\x05Frame\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x19\n" +
	"\bframe_id\x18\x02 \x01(\tR\aframeId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12$\n" +
	"\x04type\x18\x04 \x01(\x0e2\x10.frame.FrameTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x126\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1a.frame.Frame.MetadataEntryR\bmetadata\x12\x1a\n" +
	"\bsequence\x18\a \x01(\x03R\bsequence\x12 \n" +
	"\fis_key_frame\x18\b \x01(\bR\n" +
	"isKeyFrame\x12\x1a\n" +
	"\bduration\x18\t \x01(\x05R\bduration\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x13ProcessFrameRequest\x12\"\n" +
	"\x05frame\x18\x01 \x01(\v2\f.frame.FrameR\x05frame\"\x87\x02\n" +
	"\x14ProcessFrameResponse\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\tR\aframeId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\"\n" +
	"\fdestinations\x18\x04 \x03(\tR\fdestinations\x12E\n" +
	"\bmetadata\x18\x05 \x03(\v2).frame.ProcessFrameResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x18ProcessFrameBatchRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12$\n" +
	"\x06frames\x18\x02 \x03(\v2\f.frame.FrameR\x06frames\"R\n" +
	"\x19ProcessFrameBatchResponse\x125\n" +
	"\aresults\x18\x01 \x03(\v2\x1b.frame.ProcessFrameResponseR\aresults\"\x9c\x01\n" +
	"\vRoutingRule\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12\x16\n" +
	"\x06filter\x18\x02 \x01(\tR\x06filter\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x05 \x01(\x05R\tbatchSize\"\xd5\x01\n" +
	"\fStreamConfig\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x127\n" +
	"\rrouting_rules\x18\x02 \x03(\v2\x12.frame.RoutingRuleR\froutingRules\x12%\n" +
	"\x0ebackup_enabled\x18\x03 \x01(\bR\rbackupEnabled\x12!\n" +
	"\fstorage_path\x18\x04 \x01(\tR\vstoragePath\x12%\n" +
	"\x0eretention_time\x18\x05 \x01(\x03R\rretentionTime\"5\n" +
	"\x16GetStreamConfigRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"4\n" +
	"\x1aUpdateStreamConfigResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"4\n" +
	"\x15GetStreamStatsRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"\x82\x04\n" +
	"\vStreamStats\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12)\n" +
	"\x10frames_processed\x18\x02 \x01(\x03R\x0fframesProcessed\x12'\n" +
	"\x0fbytes_processed\x18\x03 \x01(\x03R\x0ebytesProcessed\x12%\n" +
	"\x0eframes_dropped\x18\x04 \x01(\x03R\rframesDropped\x12.\n" +
	"\x13avg_processing_time\x18\x05 \x01(\x01R\x11avgProcessingTime\x12F\n" +
	"\x11last_processed_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastProcessedAt\x12E\n" +
	"\x11last_key_frame_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0elastKeyFrameAt\x12(\n" +
	"\x10video_frame_rate\x18\b \x01(\x01R\x0evideoFrameRate\x12(\n" +
	"\x10audio_frame_rate\x18\t \x01(\x01R\x0eaudioFrameRate\x12#\n" +
	"\rvideo_bitrate\x18\n" +
	" \x01(\x03R\fvideoBitrate\x12#\n" +
	"\raudio_bitrate\x18\v \x01(\x03R\faudioBitrate\"M\n" +
	"\x13RestoreFrameRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x19\n" +
	"\bframe_id\x18\x02 \x01(\tR\aframeId*<\n" +
	"\tFrameType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05VIDEO\x10\x01\x12\t\n" +
	"\x05AUDIO\x10\x02\x12\f\n" +
	"\bMETADATA\x10\x032\xca\x03\n" +
	"\x14FrameSplitterService\x12G\n" +
	"\fProcessFrame\x12\x1a.frame.ProcessFrameRequest\x1a\x1b.frame.ProcessFrameResponse\x12V\n" +
	"\x11ProcessFrameBatch\x12\x1f.frame.ProcessFrameBatchRequest\x1a .frame.ProcessFrameBatchResponse\x12E\n" +
	"\x0fGetStreamConfig\x12\x1d.frame.GetStreamConfigRequest\x1a\x13.frame.StreamConfig\x12L\n" +
	"\x12UpdateStreamConfig\x12\x13.frame.StreamConfig\x1a!.frame.UpdateStreamConfigResponse\x12B\n" +
	"\x0eGetStreamStats\x12\x1c.frame.GetStreamStatsRequest\x1a\x12.frame.StreamStats\x128\n" +
	"\fRestoreFrame\x12\x1a.frame.RestoreFrameRequest\x1a\f.frame.FrameB\x12Z\x10libs/proto/frameb\x06proto3"

var (
	file_libs_proto_frame_frame_proto_rawDescOnce sync.Once
	file_libs_proto_frame_frame_proto_rawDescData []byte
)

func file_libs_proto_frame_frame_proto_rawDescGZIP() []byte {
	file_libs_proto_frame_frame_proto_rawDescOnce.Do(func() {
		file_libs_proto_frame_frame_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_libs_proto_frame_frame_proto_rawDesc), len(file_libs_proto_frame_frame_proto_rawDesc)))
	})
	return file_libs_proto_frame_frame_proto_rawDescData
}

var file_libs_proto_frame_frame_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_libs_proto_frame_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_libs_proto_frame_frame_proto_goTypes = []any{
	(FrameType)(0),                     // 0: frame.FrameType
	(*Frame)(nil),                      // 1: frame.Frame
	(*ProcessFrameRequest)(nil),        // 2: frame.ProcessFrameRequest
	(*ProcessFrameResponse)(nil),       // 3: frame.ProcessFrameResponse
	(*ProcessFrameBatchRequest)(nil),   // 4: frame.ProcessFrameBatchRequest
	(*ProcessFrameBatchResponse)(nil),  // 5: frame.ProcessFrameBatchResponse
	(*RoutingRule)(nil),                // 6: frame.RoutingRule
	(*StreamConfig)(nil),               // 7: frame.StreamConfig
	(*GetStreamConfigRequest)(nil),     // 8: frame.GetStreamConfigRequest
	(*UpdateStreamConfigResponse)(nil), // 9: frame.UpdateStreamConfigResponse
	(*GetStreamStatsRequest)(nil),      // 10: frame.GetStreamStatsRequest
	(*StreamStats)(nil),                // 11: frame.StreamStats
	(*RestoreFrameRequest)(nil),        // 12: frame.RestoreFrameRequest
	nil,                                // 13: frame.Frame.MetadataEntry
	nil,                                // 14: frame.ProcessFrameResponse.MetadataEntry
	(*timestamppb.Timestamp)(nil),      // 15: google.protobuf.Timestamp
}
var file_libs_proto_frame_frame_proto_depIdxs = []int32{
	15, // 0: frame.Frame.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: frame.Frame.type:type_name -> frame.FrameType
	13, // 2: frame.Frame.metadata:type_name -> frame.Frame.MetadataEntry
	1,  // 3: frame.ProcessFrameRequest.frame:type_name -> frame.Frame
	14, // 4: frame.ProcessFrameResponse.metadata:type_name -> frame.ProcessFrameResponse.MetadataEntry
	1,  // 5: frame.ProcessFrameBatchRequest.frames:type_name -> frame.Frame
	3,  // 6: frame.ProcessFrameBatchResponse.results:type_name -> frame.ProcessFrameResponse
	6,  // 7: frame.StreamConfig.routing_rules:type_name -> frame.RoutingRule
	15, // 8: frame.StreamStats.last_processed_at:type_name -> google.protobuf.Timestamp
	15, // 9: frame.StreamStats.last_key_frame_at:type_name -> google.protobuf.Timestamp
	2,  // 10: frame.FrameSplitterService.ProcessFrame:input_type -> frame.ProcessFrameRequest
	4,  // 11: frame.FrameSplitterService.ProcessFrameBatch:input_type -> frame.ProcessFrameBatchRequest
	8,  // 12: frame.FrameSplitterService.GetStreamConfig:input_type -> frame.GetStreamConfigRequest
	7,  // 13: frame.FrameSplitterService.UpdateStreamConfig:input_type -> frame.StreamConfig
	10, // 14: frame.FrameSplitterService.GetStreamStats:input_type -> frame.GetStreamStatsRequest
	12, // 15: frame.FrameSplitterService.RestoreFrame:input_type -> frame.RestoreFrameRequest
	3,  // 16: frame.FrameSplitterService.ProcessFrame:output_type -> frame.ProcessFrameResponse
	5,  // 17: frame.FrameSplitterService.ProcessFrameBatch:output_type -> frame.ProcessFrameBatchResponse
	7,  // 18: frame.FrameSplitterService.GetStreamConfig:output_type -> frame.StreamConfig
	9,  // 19: frame.FrameSplitterService.UpdateStreamConfig:output_type -> frame.UpdateStreamConfigResponse
	11, // 20: frame.FrameSplitterService.GetStreamStats:output_type -> frame.StreamStats
	1,  // 21: frame.FrameSplitterService.RestoreFrame:output_type -> frame.Frame
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_libs_proto_frame_frame_proto_init() }
func file_libs_proto_frame_frame_proto_init() {
	if File_libs_proto_frame_frame_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_libs_proto_frame_frame_proto_rawDesc), len(file_libs_proto_frame_frame_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_libs_proto_frame_frame_proto_goTypes,
		DependencyIndexes: file_libs_proto_frame_frame_proto_depIdxs,
		EnumInfos:         file_libs_proto_frame_frame_proto_enumTypes,
		MessageInfos:      file_libs_proto_frame_frame_proto_msgTypes,
	}.Build()
	File_libs_proto_frame_frame_proto = out.File
	file_libs_proto_frame_frame_proto_goTypes = nil
	file_libs_proto_frame_frame_proto_depIdxs = nil
}
